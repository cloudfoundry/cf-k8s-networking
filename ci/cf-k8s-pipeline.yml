---

resources:

- name: cf-k8s-networking
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git

- name: networking-oss-deployments
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/networking-oss-deployments.git

- name: bosh-deployment
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/bosh-deployment.git

- name: cf-deployment-concourse-tasks
  type: git
  icon: github-box
  source:
    branch: master
    private_key: ((github_private_key.private_key))
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v*

- name: cf-deployment
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((github_private_key.private_key))
    branch: release-candidate

- name: cf-acceptance-tests
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
    private_key: ((github_private_key.private_key))
    branch: release-candidate

- name: bosh-bootloader
  type: git
  icon: github-box
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bosh-bootloader.git
    private_key: ((github_private_key.private_key))

- name: eirini-bosh-release-git
  type: git
  icon: github-box
  source:
    branch: master
    uri: git@github.com:cloudfoundry-community/eirini-bosh-release.git
    private_key: ((github_private_key.private_key))

- name: istio
  type: git
  icon: github-box
  source:
    branch: 1.3.3
    uri: git@github.com:istio/istio.git
    private_key: ((github_private_key.private_key))

- name: metacontroller
  type: git
  icon: github-box
  source:
    branch: v0.4.0
    uri: git@github.com:GoogleCloudPlatform/metacontroller.git
    private_key: ((github_private_key.private_key))

- name: eirini-bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/eirini-bosh-release

- name: bits-service-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bits-service-release

- name: cfroutesync-image-master
  type: registry-image
  source:
    repository: gcr.io/cf-networking-images/cf-k8s-networking/cfroutesync
    tag: master

- name: cfroutesync-image-latest
  type: registry-image
  source:
    repository: gcr.io/cf-networking-images/cf-k8s-networking/cfroutesync
    tag: latest

groups:
  - name: good-acceptance
    jobs:
    - good-acceptance-bbl-up
    - good-acceptance-deploy-istio
    - good-acceptance-install-metacontroller
    - good-acceptance-install-cf-networking
    - good-acceptance-deploy-cf
    - good-acceptance-acceptance-tests
  - name: eirini-dev-1
    jobs:
    - eirini-dev-1-bbl-up
    - eirini-dev-1-deploy-istio
    - eirini-dev-1-install-metacontroller
    - eirini-dev-1-install-cf-networking
    - eirini-dev-1-deploy-cf
    - eirini-dev-1-acceptance-tests
  - name: eirini-lite-1
    jobs:
    - eirini-lite-1-bbl-up
    - eirini-lite-1-deploy-cf

# eirini-dev-1

jobs:
- name: eirini-dev-1-bbl-up
  serial: true
  serial_groups: [eirini-dev-1]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks
        - get: cf-k8s-networking
        - get: networking-oss-deployments
        - get: bosh-deployment
        - get: eirini-bosh-release-git
    - task: seed-bbl-env
      file: cf-k8s-networking/ci/tasks/bbl/seed-env.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
        SYSTEM_DOMAIN: &eirini-dev-1-domain "eirini-dev-1.routing.cf-app.com"
        APPS_DOMAIN: &eirini-dev-1-istio-domain "eirini-dev-1.routing.lol"
    - put: networking-oss-deployments
      params:
        repository: updated-bbl-state
        rebase: true
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: bosh-deployment
        new-ops-files: cf-k8s-networking
    - task: merge-bbl-config
      file: cf-k8s-networking/ci/tasks/bbl/merge-bbl-config.yml
      params:
        SOURCE1_DIR: plan-patches/gcp
        SOURCE2_DIR: plan-patches/shared
        SOURCE3_DIR: ci/bbl-configs/add-parent-dns-full
      input_mapping:
        source1: eirini-bosh-release-git
        source2: eirini-bosh-release-git
        source3: cf-k8s-networking
    - task: bbl-up-eirini-dev-1
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: merged-bbl-config
      params: &bbl-up-eirini-dev-1-params
        BBL_CONFIG_DIR: .
        BBL_STATE_DIR: "environments/eirini-dev-1"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: "certs/load-balancer/server.crt"
        BBL_LB_KEY: "certs/load-balancer/server.key"
        LB_DOMAIN: *eirini-dev-1-domain
        BBL_ENV_NAME: "eirini-dev-1"
        BBL_GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
        BBL_GCP_REGION: us-west1
      ensure:
        put: networking-oss-deployments
        params:
          repository: updated-bbl-state
          rebase: true

- name: eirini-dev-1-deploy-istio
  serial: true
  serial_groups: [eirini-dev-1]
  plan:
    - in_parallel:
        - get: istio
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [eirini-dev-1-bbl-up]
    - task: extract-kubeconfig
      file: cf-k8s-networking/ci/tasks/k8s/extract-kubeconfig.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
    - task: deploy-istio
      file: cf-k8s-networking/ci/tasks/istio/deploy-istio.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        KUBECONFIG_CONTEXT: "bosh-eirini-dev-1-cluster"
        SHARED_DNS_ZONE_NAME: "routing-lol"
        DNS_DOMAIN: "eirini-dev-1.routing.lol"
        GCP_DNS_SERVICE_ACCOUNT_KEY: ((gcp_dns_service_account_key))
        GCP_PROJECT_ID: "cf-routing"

- name: eirini-dev-1-install-metacontroller
  serial: true
  serial_groups: [eirini-dev-1]
  plan:
    - in_parallel:
        - get: metacontroller
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [eirini-dev-1-bbl-up]
    - task: extract-kubeconfig
      file: cf-k8s-networking/ci/tasks/k8s/extract-kubeconfig.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
    - task: install-metacontroller
      file: cf-k8s-networking/ci/tasks/k8s/kubectl-apply.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        k8s-config-dir: metacontroller
      params:
        KUBECONFIG_CONTEXT: "bosh-eirini-dev-1-cluster"
        FILES_TO_APPLY: |
          manifests/metacontroller-namespace.yaml
          manifests/metacontroller-rbac.yaml
          manifests/metacontroller.yaml

- name: eirini-dev-1-install-cf-networking
  serial: true
  serial_groups: [eirini-dev-1]
  plan:
    - in_parallel:
        - get: cfroutesync-image-latest
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [eirini-dev-1-bbl-up]
    - task: extract-kubeconfig
      file: cf-k8s-networking/ci/tasks/k8s/extract-kubeconfig.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
    - task: install-cf-networking
      file: cf-k8s-networking/ci/tasks/k8s/install-cf-networking.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        cfroutesync-image: cfroutesync-image-latest
      params:
        KUBECONFIG_CONTEXT: "bosh-eirini-dev-1-cluster"
        BBL_STATE_DIR: "environments/eirini-dev-1"

- name: eirini-dev-1-deploy-cf
  serial: true
  serial_groups: [eirini-dev-1]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks
        - get: cf-deployment
          resource: cf-deployment
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [eirini-dev-1-bbl-up]
        - get: eirini-bosh-release
        - get: bits-service-release
    - task: upload-eirini-release-tarball
      file: cf-k8s-networking/ci/tasks/bosh/upload-release.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        release-tarball: eirini-bosh-release
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
    - task: upload-bits-service-release-tarball
      file: cf-k8s-networking/ci/tasks/bosh/upload-release.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        release-tarball: bits-service-release
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
    - task: eirini-dev-1-stemcell-upload
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment
        new-ops-files: cf-k8s-networking
      params:
        NEW_OPS_FILES: &eirini-dev-1-ops-to-collect |
          ci/cf-deployment-operations/capi-skip-cert-verify.yml
          ci/cf-deployment-operations/eirini/add-eirini.yml
          ci/cf-deployment-operations/eirini/hardcode-doppler-ip.yml
    - task: deploy
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        ops-files: collected-ops-files
        vars-files: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
        SYSTEM_DOMAIN: *eirini-dev-1-domain
        OPS_FILES: &eirini-dev-1-ops-files |
          capi-skip-cert-verify.yml
          base-ops-files/operations/use-compiled-releases.yml
          base-ops-files/operations/bits-service/use-bits-service.yml
          add-eirini.yml
          hardcode-doppler-ip.yml
          base-ops-files/operations/override-app-domains.yml
          base-ops-files/operations/scale-to-one-az.yml
        VARS_FILES: |
          environments/eirini-dev-1/apps_domains_vars.yml
    - task: configure-eirini-bosh
      file: cf-deployment-concourse-tasks/run-errand/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        ERRAND_NAME: configure-eirini-bosh
        BBL_STATE_DIR: "environments/eirini-dev-1"

- name: eirini-dev-1-acceptance-tests
  serial: true
  serial_groups: [eirini-dev-1]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: cf-acceptance-tests
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [eirini-dev-1-bbl-up]
    - task: updated-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        integration-configs: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-dev-1"
        CATS_INTEGRATION_CONFIG_FILE: "environments/eirini-dev-1/cats_integration_config.json"
      ensure:
        put: networking-oss-deployments
        params:
          repository: updated-integration-configs
          rebase: true
    - task: acceptance-tests
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
      params:
        NODES: 2
        CONFIG_FILE_PATH: "environments/eirini-dev-1/cats_integration_config.json"
        CAPTURE_LOGS: true

# good-acceptance

- name: good-acceptance-bbl-up
  serial: true
  serial_groups: [good-acceptance]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks
        - get: cf-k8s-networking
        - get: networking-oss-deployments
        - get: bosh-deployment
        - get: eirini-bosh-release-git
    - task: seed-bbl-env
      file: cf-k8s-networking/ci/tasks/bbl/seed-env.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
        SYSTEM_DOMAIN: &good-acceptance-domain "good-acceptance.routing.cf-app.com"
        APPS_DOMAIN: &good-acceptance-istio-domain "good-acceptance.routing.lol"
    - put: networking-oss-deployments
      params:
        repository: updated-bbl-state
        rebase: true
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: bosh-deployment
        new-ops-files: cf-k8s-networking
    - task: merge-bbl-config
      file: cf-k8s-networking/ci/tasks/bbl/merge-bbl-config.yml
      params:
        SOURCE1_DIR: plan-patches/gcp
        SOURCE2_DIR: plan-patches/shared
        SOURCE3_DIR: ci/bbl-configs/add-parent-dns-full
      input_mapping:
        source1: eirini-bosh-release-git
        source2: eirini-bosh-release-git
        source3: cf-k8s-networking
    - task: bbl-up-good-acceptance
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: merged-bbl-config
      params: &bbl-up-good-acceptance-params
        BBL_CONFIG_DIR: .
        BBL_STATE_DIR: "environments/good-acceptance"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: "certs/load-balancer/server.crt"
        BBL_LB_KEY: "certs/load-balancer/server.key"
        LB_DOMAIN: *good-acceptance-domain
        BBL_ENV_NAME: "good-acceptance"
        BBL_GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
        BBL_GCP_REGION: us-west1
      ensure:
        put: networking-oss-deployments
        params:
          repository: updated-bbl-state
          rebase: true

- name: good-acceptance-deploy-istio
  serial: true
  serial_groups: [good-acceptance]
  plan:
    - in_parallel:
        - get: istio
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [good-acceptance-deploy-cf]
          trigger: true
    - task: extract-kubeconfig
      file: cf-k8s-networking/ci/tasks/k8s/extract-kubeconfig.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
    - task: deploy-istio
      file: cf-k8s-networking/ci/tasks/istio/deploy-istio.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        KUBECONFIG_CONTEXT: "bosh-good-acceptance-cluster"
        SHARED_DNS_ZONE_NAME: "routing-lol"
        DNS_DOMAIN: "good-acceptance.routing.lol"
        GCP_DNS_SERVICE_ACCOUNT_KEY: ((gcp_dns_service_account_key))
        GCP_PROJECT_ID: "cf-routing"

- name: good-acceptance-install-metacontroller
  serial: true
  serial_groups: [good-acceptance]
  plan:
    - in_parallel:
        - get: metacontroller
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [good-acceptance-deploy-cf]
          trigger: true
    - task: extract-kubeconfig
      file: cf-k8s-networking/ci/tasks/k8s/extract-kubeconfig.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
    - task: install-metacontroller
      file: cf-k8s-networking/ci/tasks/k8s/kubectl-apply.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        k8s-config-dir: metacontroller
      params:
        KUBECONFIG_CONTEXT: "bosh-good-acceptance-cluster"
        FILES_TO_APPLY: |
          manifests/metacontroller-namespace.yaml
          manifests/metacontroller-rbac.yaml
          manifests/metacontroller.yaml

- name: good-acceptance-install-cf-networking
  serial: true
  serial_groups: [good-acceptance]
  plan:
    - in_parallel:
        - get: cfroutesync-image-master
          trigger: true
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [good-acceptance-deploy-cf, good-acceptance-install-metacontroller, good-acceptance-deploy-istio]
          trigger: true
    - task: extract-kubeconfig
      file: cf-k8s-networking/ci/tasks/k8s/extract-kubeconfig.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
    - task: install-cf-networking
      file: cf-k8s-networking/ci/tasks/k8s/install-cf-networking.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        cfroutesync-image: cfroutesync-image-master
      params:
        KUBECONFIG_CONTEXT: "bosh-good-acceptance-cluster"
        BBL_STATE_DIR: "environments/good-acceptance"

- name: good-acceptance-deploy-cf
  serial: true
  serial_groups: [good-acceptance]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks
        - get: cf-deployment
          resource: cf-deployment
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [good-acceptance-bbl-up]
          trigger: true
        - get: eirini-bosh-release
        - get: bits-service-release
    - task: upload-eirini-release-tarball
      file: cf-k8s-networking/ci/tasks/bosh/upload-release.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        release-tarball: eirini-bosh-release
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
    - task: upload-bits-service-release-tarball
      file: cf-k8s-networking/ci/tasks/bosh/upload-release.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        release-tarball: bits-service-release
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
    - task: good-acceptance-stemcell-upload
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment
        new-ops-files: cf-k8s-networking
      params:
        NEW_OPS_FILES: &good-acceptance-ops-to-collect |
          ci/cf-deployment-operations/capi-skip-cert-verify.yml
          ci/cf-deployment-operations/eirini/add-eirini.yml
          ci/cf-deployment-operations/eirini/hardcode-doppler-ip.yml
    - task: deploy
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        ops-files: collected-ops-files
        vars-files: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
        SYSTEM_DOMAIN: *good-acceptance-domain
        OPS_FILES: &good-acceptance-ops-files |
          capi-skip-cert-verify.yml
          base-ops-files/operations/use-compiled-releases.yml
          base-ops-files/operations/bits-service/use-bits-service.yml
          add-eirini.yml
          hardcode-doppler-ip.yml
          base-ops-files/operations/override-app-domains.yml
          base-ops-files/operations/scale-to-one-az.yml
        VARS_FILES: |
          environments/good-acceptance/apps_domains_vars.yml
    - task: configure-eirini-bosh
      file: cf-deployment-concourse-tasks/run-errand/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        ERRAND_NAME: configure-eirini-bosh
        BBL_STATE_DIR: "environments/good-acceptance"

- name: good-acceptance-acceptance-tests
  serial: true
  serial_groups: [good-acceptance]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: cf-acceptance-tests
        - get: cf-k8s-networking
          passed: [good-acceptance-install-cf-networking]
          trigger: true
        - get: networking-oss-deployments
    - task: updated-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        integration-configs: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/good-acceptance"
        CATS_INTEGRATION_CONFIG_FILE: "environments/good-acceptance/cats_integration_config.json"
      ensure:
        put: networking-oss-deployments
        params:
          repository: updated-integration-configs
          rebase: true
    - task: acceptance-tests
      file: cf-deployment-concourse-tasks/run-cats/task.yml
      input_mapping:
        integration-config: updated-integration-configs
      params:
        NODES: 2
        CONFIG_FILE_PATH: "environments/good-acceptance/cats_integration_config.json"
        CAPTURE_LOGS: true

# eirini-lite-1

- name: eirini-lite-1-bbl-up
  serial: true
  serial_groups: [eirini-lite-1]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks
        - get: cf-k8s-networking
        - get: cf-deployment
        - get: networking-oss-deployments
        - get: bosh-deployment
        - get: bosh-bootloader
        - get: eirini-bosh-release-git
    - task: seed-bbl-env
      file: cf-k8s-networking/ci/tasks/bbl/seed-env.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-lite-1"
        SYSTEM_DOMAIN: &eirini-lite-1-domain "eirini-lite-1.routing.cf-app.com"
        APPS_DOMAIN: &eirini-lite-1-istio-domain "eirini-lite-1.routing.lol"
    - put: networking-oss-deployments
      params:
        repository: updated-bbl-state
        rebase: true
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: bosh-deployment
        new-ops-files: cf-k8s-networking
    - task: merge-bbl-config
      file: cf-k8s-networking/ci/tasks/bbl/merge-bbl-config.yml
      params:
        SOURCE1_DIR: plan-patches/bosh-lite-gcp
        SOURCE2_DIR: ci/bbl-configs/add-parent-dns-lite
        SOURCE3_DIR: ci/bbl-configs/use-larger-disk-lite-gcp
        SOURCE4_DIR: plan-patches/gcp
        SOURCE5_DIR: ci/bbl-configs/eirini-bosh-lite
      input_mapping:
        source1: bosh-bootloader
        source2: cf-k8s-networking
        source3: cf-k8s-networking
        source4: eirini-bosh-release-git
        source5: cf-k8s-networking
    - task: bbl-up-eirini-lite-1
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: updated-bbl-state
        bbl-config: merged-bbl-config
      params: &bbl-up-eirini-lite-1-params
        BBL_CONFIG_DIR: .
        BBL_STATE_DIR: "environments/eirini-lite-1"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: "certs/load-balancer/server.crt"
        BBL_LB_KEY: "certs/load-balancer/server.key"
        LB_DOMAIN: *eirini-lite-1-domain
        BBL_ENV_NAME: "eirini-lite-1"
        BBL_GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
        GIT_COMMIT_EMAIL: "cf-networking@pivotal.io"
        BBL_GCP_REGION: us-west1
        IS_BOSH_LITE: true
      ensure:
        put: networking-oss-deployments
        params:
          repository: updated-bbl-state
          rebase: true
    - task: update-cloud-config
      file: cf-k8s-networking/ci/tasks/bosh/update-cloud-config.yml
      input_mapping:
        bbl-state: updated-bbl-state
        cloud-config: cf-deployment
      params:
        BBL_STATE_DIR: "environments/eirini-lite-1"
        CLOUD_CONFIG_PATH: iaas-support/bosh-lite/cloud-config.yml

- name: eirini-lite-1-deploy-cf
  serial: true
  serial_groups: [eirini-lite-1]
  plan:
    - in_parallel:
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks
        - get: cf-deployment
          resource: cf-deployment
        - get: cf-k8s-networking
        - get: networking-oss-deployments
          passed: [eirini-lite-1-bbl-up]
        - get: eirini-bosh-release
        - get: bits-service-release
    - task: upload-eirini-release-tarball
      file: cf-k8s-networking/ci/tasks/bosh/upload-release.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        release-tarball: eirini-bosh-release
      params:
        BBL_STATE_DIR: "environments/eirini-lite-1"
    - task: upload-bits-service-release-tarball
      file: cf-k8s-networking/ci/tasks/bosh/upload-release.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        release-tarball: bits-service-release
      params:
        BBL_STATE_DIR: "environments/eirini-lite-1"
    - task: eirini-lite-1-stemcell-upload
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-lite-1"
        INFRASTRUCTURE: bosh-lite
    - task: collect-ops-files
      file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
      input_mapping:
        base-ops-files: cf-deployment
        new-ops-files: cf-k8s-networking
      params:
        NEW_OPS_FILES: &eirini-lite-1-ops-to-collect |
          ci/cf-deployment-operations/capi-skip-cert-verify.yml
          ci/cf-deployment-operations/eirini/add-eirini.yml
          ci/cf-deployment-operations/eirini/hardcode-doppler-ip-bosh-lite.yml
    - task: deploy
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
        ops-files: collected-ops-files
        vars-files: networking-oss-deployments
      params:
        BBL_STATE_DIR: "environments/eirini-lite-1"
        SYSTEM_DOMAIN: *eirini-lite-1-domain
        OPS_FILES: &eirini-lite-1-ops-files |
          capi-skip-cert-verify.yml
          base-ops-files/operations/use-compiled-releases.yml
          base-ops-files/operations/bosh-lite.yml
          base-ops-files/operations/bits-service/use-bits-service.yml
          add-eirini.yml
          hardcode-doppler-ip-bosh-lite.yml
          base-ops-files/operations/scale-to-one-az.yml
    - task: configure-eirini-bosh
      file: cf-deployment-concourse-tasks/run-errand/task.yml
      input_mapping:
        bbl-state: networking-oss-deployments
      params:
        ERRAND_NAME: configure-eirini-bosh
        BBL_STATE_DIR: "environments/eirini-lite-1"
