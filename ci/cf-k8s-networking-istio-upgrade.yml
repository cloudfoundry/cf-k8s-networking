---
resources:
- name: istio-release
  type: github-release
  icon: github
  source:
    owner: istio
    repository: istio
    tag_filter: '1\.12\..*'
    access_token: ((cf_for_k8s_release_bot_access_token))

- name: cf-for-k8s-istio-bump-branch
  type: git
  icon: github
  source:
    branch: istio-version-bump
    private_key: ((cf_for_k8s_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-for-k8s.git

- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    branch: develop
    paths:
    - ci/**

- name: cf-for-k8s-develop
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    branch: develop

- name: cf-k8s-networking
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))

- name: cf-k8s-networking-ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    paths:
    - ci/**

- name: ready-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/ready
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: destroy-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/destroy
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

jobs:
- name: generate-new-istio-config
  serial_groups: ['bump-istio']
  plan:
  - in_parallel:
    - get: cf-for-k8s-develop
    - get: istio-release
      trigger: true

  - task: generate-and-commit-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-for-k8s-ci
      inputs:
      - name: istio-release
      - name: cf-for-k8s-develop
      outputs:
      - name: cf-for-k8s-develop
      run:
        path: /bin/bash
        args:
        - -cex
        - |
          set -euo pipefail

          pushd istio-release > /dev/null
            tar -xzvf istioctl-*-linux-amd64.tar.gz
            mv istioctl /usr/local/bin
          popd

          ISTIO_VERSION="$(cat istio-release/tag)"

          sed -i \
            "s/istio_version.*\$/istio_version: $ISTIO_VERSION/" \
            cf-for-k8s-develop/build/istio/values.yaml

          cf-for-k8s-develop/build/istio/build.sh 2>&1 | tee output.txt

          # TODO: this is hacky
          #       we should figure out why the build script doesn't exit nonzero on errors
          if [[ $( cat output.txt | grep Error | wc -l) -gt 0 ]]; then
            exit 1
          fi

          pushd cf-for-k8s-develop > /dev/null
            git config --global user.name "cf-for-k8s-release bot"
            git config --global user.email "cf-release-integration+cf-for-k8s-release-bot@pivotal.io"
            git commit -a -m "Bump Istio to ${ISTIO_VERSION}"
          popd

  - put: cf-for-k8s-istio-bump-branch
    params:
      repository: cf-for-k8s-develop
      tag_prefix: istio-bump-to-
      tag: istio-release/tag
      force: true

- name: validate-upgrade-on-gke
  serial_groups: ['bump-istio']
  plan:
  - in_parallel:
    - get: cf-for-k8s-develop
    - get: cf-for-k8s-istio-bump-branch
      trigger: true
      passed:
      - generate-new-istio-config
    - get: cf-for-k8s-ci
    - get: cf-k8s-networking-ci
    - get: cf-k8s-networking

  - put: ready-pool
    params:
      acquire: true

  - do:
    - task: display-cluster-info
      file: cf-for-k8s-ci/ci/tasks/display-gke-cluster-info/task.yml
      input_mapping:
        pool-lock: ready-pool
      params:
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))

    - task: install-cf-develop
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-develop
        pool-lock: ready-pool
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        DOMAIN: k8s-dev.relint.rocks
        USE_EXTERNAL_APP_REGISTRY: true
        APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
        APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))

    - task: push-test-app
      file: cf-for-k8s-ci/ci/tasks/push-test-app/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-istio-bump-branch
      params:
        APP_NAME: existing-node-app
        VERIFY_EXISTING_APP: false

    - task: upgrade-to-istio-bump
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-istio-bump-branch
        pool-lock: ready-pool
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        UPGRADE: true
        UPTIMER: true
        DOMAIN: k8s-dev.relint.rocks
        USE_EXTERNAL_APP_REGISTRY: true
        APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
        APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))

    - task: generate-integration-configs
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-integration-config.yml

    - task: networking-acceptance-gke-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-networking-acceptance-gke.yml
      input_mapping:
        pool-lock: ready-pool
      params:
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))

    ensure:
      do:
      - put: destroy-pool
        params:
          add: ready-pool

      - put: ready-pool
        params:
          remove: ready-pool
