---
resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

groups:
- name: routecontroller
  jobs:
  - run-routecontroller-units
  - run-routecontroller-integration-tests
  - publish-routecontroller-image
- name: integrate
  jobs:
  - gke-deploy-and-test
  - bump-rc
  - ship-what
  - ship-it

resources:
- name: cf-acceptance-tests
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    branch: develop

- name: cf-for-k8s
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    branch: develop
    ignore_paths:
    - ci

- name: cf-for-k8s-ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-for-k8s
    private_key: ((cf_for_k8s_readonly_deploy_key.private_key))
    branch: develop
    paths:
    - ci/**

- name: cf-k8s-networking
  type: git
  icon: github
  source:
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    ignore_paths:
    - version

- name: cf-k8s-networking-ci
  type: git
  icon: github
  source:
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
    - ci/**

- name: cf-k8s-networking-rc
  type: git
  icon: github
  source:
    branch: release-candidate
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git

- name: cf-k8s-networking-config
  type: git
  icon: github
  source:
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    ignore_paths:
    - routecontroller
    - version

- name: routecontroller
  type: git
  icon: github
  source:
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    paths:
    - routecontroller

- name: concourse-dcind
  type: git
  source:
    branch: master
    uri: https://github.com/karlkfi/concourse-dcind.git

- name: version
  type: semver
  icon: counter
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-k8s-networking.git
    branch: develop
    private_key: ((cf_k8s_networking_readwrite_deploy_key.private_key))
    git_user: "relint-ci <cf-release-integration@pivotal.io>"
    file: version

- name: cf-k8s-networking-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry
    repository: cf-k8s-networking
    drafts: true
    access_token: ((cf_for_k8s_release_bot_access_token))

- name: ready-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/ready
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

- name: destroy-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: k8s-dev/destroy
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))

jobs:
# Build
- name: run-routecontroller-units
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: routecontroller
          trigger: true
        - get: cf-k8s-networking-ci
    - task: unit-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-routecontroller-units.yml

- name: run-routecontroller-integration-tests
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: routecontroller
          passed: [run-routecontroller-units]
          trigger: true
        - get: cf-k8s-networking-ci
        - get: concourse-dcind
    - task: integration-tests
      privileged: true
      file: cf-k8s-networking-ci/ci/tasks/tests/run-routecontroller-integration-tests.yml

- name: publish-routecontroller-image
  serial: true
  serial_groups: [image-publishing]
  plan:
    - in_parallel:
        - get: cf-k8s-networking
        - get: routecontroller
          passed: [run-routecontroller-integration-tests]
          trigger: true
        - get: cf-for-k8s-ci
        - get: cf-k8s-networking-ci
    - task: build-routecontroller-image-and-update-digest
      file: cf-k8s-networking-ci/ci/tasks/build-image/task.yml
      privileged: true
    - put: cf-k8s-networking
      params:
        repository: updated-cf-k8s-networking
        rebase: true

# Environment to run tests
- name: gke-deploy-and-test
  serial: true
  plan:
    - in_parallel:
        - get: cf-for-k8s
        - get: cf-for-k8s-ci
        - get: cf-k8s-networking-ci
        - get: cf-k8s-networking
          resource: cf-k8s-networking-config
          trigger: true
        - get: cf-acceptance-tests
    - put: ready-pool
      params:
        acquire: true
    - task: bump-cf-k8s-networking
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: cloudfoundry/cf-for-k8s-ci
        inputs:
        - name: cf-for-k8s
        - name: cf-k8s-networking
        outputs:
        - name: cf-for-k8s-latest-networking
        run:
          path: /bin/bash
          args:
          - -ec
          - |
            pushd cf-for-k8s
              vendir sync --directory config/networking/_ytt_lib/cf-k8s-networking=../cf-k8s-networking/config
            popd
            cp -r cf-for-k8s/* cf-for-k8s-latest-networking
    - task: install-cf
      file: cf-for-k8s-ci/ci/tasks/install-cf-on-gke/task.yml
      input_mapping:
        cf-for-k8s: cf-for-k8s-latest-networking
        pool-lock: ready-pool
      params:
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        DOMAIN: k8s-dev.relint.rocks
        USE_EXTERNAL_APP_REGISTRY: true
        APP_REGISTRY_HOSTNAME: https://index.docker.io/v1/
        APP_REGISTRY_REPOSITORY_PREFIX: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_USERNAME: ((cf_for_k8s_private_dockerhub.username))
        APP_REGISTRY_PASSWORD: ((cf_for_k8s_private_dockerhub.password))
    - task: run-smoke-test
      file: cf-for-k8s-ci/ci/tasks/run-smoke-tests/task.yml
      params:
        SMOKE_TEST_SKIP_SSL: true
    - task: generate-integration-configs
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-integration-config.yml
    - task: networking-acceptance-gke-tests
      file: cf-k8s-networking-ci/ci/tasks/tests/run-networking-acceptance-gke.yml
      input_mapping:
        pool-lock: ready-pool
      params:
        GCP_PROJECT_NAME: ((ci_k8s_gcp_project_name))
        GCP_PROJECT_ZONE: ((ci_k8s_gcp_project_zone))
        GCP_SERVICE_ACCOUNT_JSON: ((ci_k8s_gcp_service_account_json))
    - task: run-cats
      file: cf-for-k8s-ci/ci/tasks/run-cats/task.yml
      params:
        INCLUDE_APPS: true
        INCLUDE_ROUTING: true
        SKIP_REGEXP:

  ensure:
    do:
    - put: destroy-pool
      params:
        add: ready-pool
    - put: ready-pool
      params:
        remove: ready-pool

- name: bump-rc
  plan:
    - in_parallel:
        - get: cf-k8s-networking-config
          passed: [gke-deploy-and-test]
          trigger: true
    - put: cf-k8s-networking-rc
      params:
        repository: cf-k8s-networking-config

- name: ship-what
  plan:
    - in_parallel:
        - get: cf-k8s-networking-rc
          passed: [bump-rc]
          trigger: true
        - get: cf-k8s-networking-ci
        - get: version
    - task: print-release-notes
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-github-release.yml
      input_mapping:
        cf-k8s-networking: cf-k8s-networking-rc

- name: ship-it
  plan:
    - in_parallel:
        - get: cf-k8s-networking-rc
          passed: [ship-what]
        - get: cf-k8s-networking-ci
        - get: version
    - put: cf-k8s-networking-rc
      params:
        repository: cf-k8s-networking-rc
        tag: version/version
        only_tag: true
        tag_prefix: v
    - task: create-release
      file: cf-k8s-networking-ci/ci/tasks/cf4k8s/generate-github-release.yml
      input_mapping:
        cf-k8s-networking: cf-k8s-networking-rc
    - put: cf-k8s-networking-release
      params:
        name: release-text/name
        tag: release-text/name
        body: release-text/body.md
    - put: version
      params: {bump: minor}
